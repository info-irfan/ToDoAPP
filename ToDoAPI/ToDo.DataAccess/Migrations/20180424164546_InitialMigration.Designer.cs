// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using ToDo.DataAccess.Repository;

namespace ToDo.DataAccess.Migrations
{
    [DbContext(typeof(ToDoDBContext))]
    [Migration("20180424164546_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.Model.Model.TaskReminder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Day");

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime>("FromTime");

                    b.Property<int>("Month");

                    b.Property<int>("TaskId");

                    b.Property<DateTime>("ToDate");

                    b.Property<DateTime>("ToTime");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskReminder");
                });

            modelBuilder.Entity("ToDo.Model.Model.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Note");

                    b.Property<int>("StatusId");

                    b.Property<string>("TaskName");

                    b.Property<int>("TaskTypeId");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ToDo.Model.Model.TaskReminder", b =>
                {
                    b.HasOne("ToDo.Model.Model.Tasks", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
